scalar Upload

type User {
    id: ID!
    name: String
    email: String!
    password: String!
}

type File {
    id: ID!
    filename: String!
    path: String!
    uploadedAt: String!
    downloadFile:String!
    size: Int!
    user: User!
}

type StorageInfo {
    totalFiles: Int!
    totalSize: Int!
    formattedSize: String!
}


type Query {
    users: [User!]!
    userFiles(userID: ID!): [File!]!
    allFiles: [File!]!
    downloadFile(fileID: ID!): File!
    userStorageInfo(userID: ID!): StorageInfo!
}

type AuthPayload {
    token: String!
    user: User!
}

type Mutation {
    createUser(name: String!, email: String!, password: String!): User!
    deleteUser(id: ID!): Boolean!
    login(email: String!, password: String!): AuthPayload!
    uploadFile(userID: ID!, file: Upload!): File!
    deleteFile(fileID: ID!): Boolean!
}